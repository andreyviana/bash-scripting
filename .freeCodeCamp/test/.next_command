builtin unset VSCODE_INJECTION
[ -z "$VSCODE_SHELL_INTEGRATION" ]
[ -n "${VSCODE_ENV_REPLACE:-}" ]
[ -n "${VSCODE_ENV_PREPEND:-}" ]
[ -n "${VSCODE_ENV_APPEND:-}" ]
[[ "$(uname -s)" =~ ^CYGWIN*|MINGW*|MSYS* ]]
[[ "$HISTCONTROL" =~ .. ]]
__vsc_history_verify=1
__vsc_initialized=0
__vsc_original_PS1="$PS1"
__vsc_original_PS2="$PS2"
__vsc_custom_PS1=""
__vsc_custom_PS2=""
__vsc_in_command_execution="1"
__vsc_current_command=""
__vsc_nonce="$VSCODE_NONCE"
unset VSCODE_NONCE
[[ -n "${bash_preexec_imported:-}" ]]
__vsc_dbg_trap="$(__vsc_get_trap DEBUG)"
[[ -z "$__vsc_dbg_trap" ]]
[[ "$__vsc_dbg_trap" != '__vsc_preexec "$_"' && "$__vsc_dbg_trap" != '__vsc_preexec_all "$_"' ]]
trap '__vsc_preexec_all "$_"' DEBUG
__vsc_original_prompt_command=${PROMPT_COMMAND:-}
builtin unset VSCODE_INJECTION
[ -z "$VSCODE_SHELL_INTEGRATION" ]
[ -n "${VSCODE_ENV_REPLACE:-}" ]
[ -n "${VSCODE_ENV_PREPEND:-}" ]
[ -n "${VSCODE_ENV_APPEND:-}" ]
[[ "$(uname -s)" =~ ^CYGWIN*|MINGW*|MSYS* ]]
[[ "$HISTCONTROL" =~ .. ]]
__vsc_history_verify=1
__vsc_initialized=0
__vsc_original_PS1="$PS1"
__vsc_original_PS2="$PS2"
__vsc_custom_PS1=""
__vsc_custom_PS2=""
__vsc_in_command_execution="1"
__vsc_current_command=""
__vsc_nonce="$VSCODE_NONCE"
unset VSCODE_NONCE
[[ -n "${bash_preexec_imported:-}" ]]
__vsc_dbg_trap="$(__vsc_get_trap DEBUG)"
[[ -z "$__vsc_dbg_trap" ]]
[[ "$__vsc_dbg_trap" != '__vsc_preexec "$_"' && "$__vsc_dbg_trap" != '__vsc_preexec_all "$_"' ]]
trap '__vsc_preexec_all "$_"' DEBUG
__vsc_original_prompt_command=${PROMPT_COMMAND:-}
echo hello bash
touch questionnaire.sh
__vsc_prompt_cmd_original
__vsc_prompt_cmd_original
sh questionnaire.sh
__vsc_prompt_cmd_original
bash questionnaire.sh
which bash
__vsc_prompt_cmd_original
echo shebang
./questionnaire.sh
ls --color=auto -l
chmod +x questionnaire.sh
__vsc_prompt_cmd_original
ls --color=auto -1
ls --color=auto -l
./questionnaire.sh
ls --color=auto -l
./questionnaire.sh
QUESTION1="What's your name?"
./questionnaire.sh
./questionnaire.sh
./questionnaire.sh
./questionnaire.sh
echo --help
man echo
./questionnaire.sh
./questionnaire.sh
./questionnaire.sh
__vsc_prompt_cmd_original
./questionnaire.sh
touch countdown.sh
__vsc_prompt_cmd_original
chmod +x countdown.sh
__vsc_prompt_cmd_original
__vsc_prompt_cmd_original
with bash
bash with
./countdown.sh
./countdown.sh arg1 arg2 arg3
./countdown.sh arg1 arg2 arg3
__vsc_prompt_cmd_original
help
man if
help if
./countdown.sh arg1
./countdown.sh arg1
./countdown.sh arg1
./countdown.sh arg2
./countdown.sh arg2
./countdown.sh 4
5
./countdown.sh 5
help
help [[ expression ]]
help test
./countdown.sh 5
__vsc_prompt_cmd_original
[ -d "$HOME/bin" ]
[ -d "$HOME/.local/bin" ]
echo -n bf3bbfb9-2b6e-4c74-a0f3-0fe2703e1a42
cat /proc/self/environ
echo -n bf3bbfb9-2b6e-4c74-a0f3-0fe2703e1a42
[ -d "$HOME/bin" ]
[ -d "$HOME/.local/bin" ]
'/vscode/vscode-server/bin/linux-x64/0ee08df0cf4527e40edc9aa28f4b5bd38bbff2b2/node' -p '"1e28119d5de5" + JSON.stringify(process.env) + "1e28119d5de5"'
builtin unset VSCODE_INJECTION
[ -z "$VSCODE_SHELL_INTEGRATION" ]
[ -n "${VSCODE_ENV_REPLACE:-}" ]
[ -n "${VSCODE_ENV_PREPEND:-}" ]
[ -n "${VSCODE_ENV_APPEND:-}" ]
[[ "$(uname -s)" =~ ^CYGWIN*|MINGW*|MSYS* ]]
[[ "$HISTCONTROL" =~ .. ]]
__vsc_history_verify=1
__vsc_initialized=0
__vsc_original_PS1="$PS1"
__vsc_original_PS2="$PS2"
__vsc_custom_PS1=""
__vsc_custom_PS2=""
__vsc_in_command_execution="1"
__vsc_current_command=""
__vsc_nonce="$VSCODE_NONCE"
unset VSCODE_NONCE
[[ -n "${bash_preexec_imported:-}" ]]
__vsc_dbg_trap="$(__vsc_get_trap DEBUG)"
[[ -z "$__vsc_dbg_trap" ]]
[[ "$__vsc_dbg_trap" != '__vsc_preexec "$_"' && "$__vsc_dbg_trap" != '__vsc_preexec_all "$_"' ]]
trap '__vsc_preexec_all "$_"' DEBUG
__vsc_original_prompt_command=${PROMPT_COMMAND:-}
[[ 4 -le 5 ]]
$?
echo $?
echo $?
[[ 4 -le 5 ]]
__vsc_prompt_cmd_original
echo $?
echo $?
[[ 4 -le 5 ]]
echo $?
[[ 4 -ge 5 ]]
echo $?
[[ 4 -ge 5 ]]
[[ 5 -ne 10 ]]
[[ 10 -ne 5 ]]
[[ 5 -ne 10 ]]
[[ 5 -ne 10 ]]
bad_command
ls --color=auto
ls --color=auto
ls --color=auto -y
ls --color=auto -y
help test
[[ -a countdown.sh ]]
[[ -a countdown.sh ]]
[[ -a countdown.sh ]]
[[ -a bad_file.txt ]]
[[ -x countdown.sh ]]
help [[
[[ -x countdown.sh && 5 -le 4 ]]
